defaults:
  - _self_
  - backbone: null

hydra:
  run:
    dir: ${exp_dir}

exp_name: default
output_dir: /home/huangjiangyong/scratch/data/GVUE
exp_dir: ${output_dir}/${exp_name}
date: null
name: ${model.v_backbone.key}

submit: 0
test_only: False

simulator:
  build_path: /home/huangjiangyong/Documents/G-VUE-Matterport3D/build
  data:
    scans_path: /home/huangjiangyong/william/matterport_data_new/v1/scans
    conn_path: /home/huangjiangyong/Documents/G-VUE-RecurrentVLN/connectivity

precompute_v_feature:
  use_cached: True
  batch_size: 4
  data:
    output_dir: /home/huangjiangyong/william/r2r_img_features
    tsv_path: ${precompute_v_feature.data.output_dir}/${model.v_backbone}.tsv

model:
  image_size: 224
  v_sizes: ${model.v_backbone.hidden_dim}
  v_backbone: ${backbone}
  l_backbone:
      cfg_dir: /scratch/huangjiangyong/data/roberta-base
      hidden_dim: 768
  decoder:
    type: prevalent  # only PREVALENT is supported. Isn't hard to make OSCAR work though.
    max_input: 80
    angle_feat_size: 128
    featdropout: 0.4
    dropout: 0.5  
    crossentropy_ignoreid: -100
  
# for eval, set 'type' to validlistener, and set eval_path to the weights of the model to be evaluated
train: 
  type: listener    # in ['listener', 'auglistener', 'validlistener'] 
  eval_path: null
  pretrained_path: 
    prevalent: /home/huangjiangyong/william/Prevalent/pretrained_model
    oscar: null
  log:
    dir: ${exp_dir}
    record_file: ${exp_dir}${model.v_backbone.key}.txt
  data:
    v_feature: ${precompute_v_feature.data.tsv_path}
    r2r_dir: /home/huangjiangyong/william/data
    aug_path: null
  setting:
    batch_size: 32
    lr: 1e-5
    iters: 300000
    optim: adamW
    max_action: 15
    feedback: sample
    ml_weight: 0.20
    teacher_weight: 1
    loadOptim: False
  a2c:
    gamma: 0.9
    normalize_loss: total    # in ['batch', 'total']


  

  

