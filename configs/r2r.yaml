defaults:
  - _self_
  - backbone: null

hydra:
  run:
    dir: ${exp_dir}

task:
  key: navigation

# =========================== to be filled out by user =========================== #
output_dir: /home/huangjiangyong/william/r2r_output                                #find a good directory to store logs, ckpts, etc.
mattersim_repo: /home/huangjiangyong/Documents/G-VUE-Matterport3D                  #path to G-VUE-Matterport3D repo (printed by G-VUE-setup.sh)
downloaded_data: /home/huangjiangyong/william/r2r_all_data                         #path to data directory (also need to supply as argument to setup_navigation.sh)
l_backbone_cfg: /mnt/huangjiangyong/roberta-base                                   #language backbone cfg, just like other tasks
# ================================================================================ #

eval:
  #Automatically set to evaluate the best saved ckpt. Change this to evaluate something else.
  path: ${exp_dir}/snap/${backbone.key}/state_dict/best_val_unseen

exp_name: default
exp_dir: ${output_dir}/${exp_name}
name: ${model.v_backbone.key}

submit: 0
test_only: False


simulator:
  build_path: ${mattersim_repo}/build
  data:
    scans_path: ${downloaded_data}/v1/scans
    conn_path: ${mattersim_repo}/connectivity

precompute_v_feature:
  use_cached: True
  batch_size: 4
  data:
    output_dir: ${downloaded_data}/r2r_img_features
    tsv_path: ${precompute_v_feature.data.output_dir}/${model.v_backbone.key}.tsv

model:
  image_size: 224
  v_sizes: ${model.v_backbone.hidden_dim}
  v_backbone: ${backbone}
  l_backbone: # For RoBERTa only. No need to provide anything for LXMERT
      cfg_dir: ${l_backbone_cfg}
      hidden_dim: 768
  decoder:
    type: prevalent  # only PREVALENT is supported. Isn't hard to make OSCAR work though.
    max_input: 80
    angle_feat_size: 128
    featdropout: 0.4
    dropout: 0.5  
    crossentropy_ignoreid: -100
  ablation:
    l_backbone: 'lxmert' # in ['roberta', 'lxmert']
    decoder_fromscratch: True

# For eval, set 'type' to validlistener
train: 
  type: listener    # in ['listener', 'auglistener', 'validlistener']
  continue_training:
    key: False
    path: null
  pretrained_path: 
    prevalent: ${downloaded_data}/Prevalent/pretrained_model
    oscar: null
  log:
    dir: ${exp_dir}
    record_file: ${exp_dir}${model.v_backbone.key}.txt
  data:
    v_feature: ${precompute_v_feature.data.tsv_path}
    r2r_dir: ${downloaded_data}/r2r_data
    aug_path: null
  setting:
    batch_size: 32
    lr: 1e-5
    iters: 300000
    optim: adamW
    max_action: 15
    feedback: sample
    ml_weight: 0.20
    teacher_weight: 1
    loadOptim: False
  a2c:
    gamma: 0.9
    normalize_loss: total    # in ['batch', 'total']

  

  

